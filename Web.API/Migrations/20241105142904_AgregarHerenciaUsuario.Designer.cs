// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Web.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241105142904_AgregarHerenciaUsuario")]
    partial class AgregarHerenciaUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("DisenioSistemas.Model.Abstract.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("contrasena")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("contrasena");

                    b.Property<bool>("estado")
                        .HasColumnType("INTEGER")
                        .HasColumnName("estado");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("usuario");

                    b.HasKey("id");

                    b.ToTable("Usuarios", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Model.Entity.AnioLectivo", b =>
                {
                    b.Property<int>("IdAnioLectivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("IdAnioLectivo");

                    b.Property<string>("Anio")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Anio");

                    b.HasKey("IdAnioLectivo");

                    b.ToTable("AnioLectivos");
                });

            modelBuilder.Entity("Model.Entity.Administrador", b =>
                {
                    b.HasBaseType("DisenioSistemas.Model.Abstract.Usuario");

                    b.Property<int>("idAdministrador")
                        .HasColumnType("INTEGER");

                    b.HasIndex("idAdministrador")
                        .IsUnique();

                    b.ToTable("Administradores", (string)null);
                });

            modelBuilder.Entity("Model.Entity.Bedel", b =>
                {
                    b.HasBaseType("DisenioSistemas.Model.Abstract.Usuario");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("apellido");

                    b.Property<int>("idBedel")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idBedel");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nombre");

                    b.Property<string>("turno")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("turno");

                    b.HasIndex("idBedel")
                        .IsUnique();

                    b.ToTable("Bedeles", (string)null);
                });

            modelBuilder.Entity("Model.Entity.Administrador", b =>
                {
                    b.HasOne("DisenioSistemas.Model.Abstract.Usuario", null)
                        .WithOne()
                        .HasForeignKey("Model.Entity.Administrador", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisenioSistemas.Model.Abstract.Usuario", null)
                        .WithOne()
                        .HasForeignKey("Model.Entity.Administrador", "idAdministrador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Entity.Bedel", b =>
                {
                    b.HasOne("DisenioSistemas.Model.Abstract.Usuario", null)
                        .WithOne()
                        .HasForeignKey("Model.Entity.Bedel", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DisenioSistemas.Model.Abstract.Usuario", null)
                        .WithOne()
                        .HasForeignKey("Model.Entity.Bedel", "idBedel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
